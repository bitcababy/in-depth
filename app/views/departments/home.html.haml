- content_for :page_title, 'Home'
- content_for :page_header, Settings.school_name + " " + Settings.dept_name
#home-page
	= render partial: 'departments/pane', collection: @panes, as: :doc
#editor

:coffeescript
	$(document).ready ->
		# Set up accordion
		$("#home-page").accordion
			heightStyle: "content"
		default_settings = 
			width: 					700
			height: 				600
			autoOpen: 			false
			modal: 					true
			resizable: 			true
			closeOnEscape:	false
			emptyDiv:				true
			saveAction:			"destroy"

		get_settings = ->
			$('#editor').data "linkToForm"

		unlock_doc = (form) ->
			$.get( form.action + '/unlock')
		
		close_dialog = ->
			settings = get_settings()
			div = settings.div
			instance = CKEDITOR.instances[settings.CKname]
			instance.destroy() if instance
			div.dialog settings.saveAction
			div.empty() if settings.emptyDiv

		get_form = ->
			settings = get_settings()
			return $('form', settings.div)
		
		do_save = (evt) ->
			form = get_form()
			$.ajax
				type: 		'PUT'
				url: 			form.attr('action')
				dataType: 'json'
				data: 		$(form).serialize()
				success:	(data, status, jqxhr) -> handleSaveResponse(status, data, null, jqxhr)
				error:		(jqxhr, status, errorMsg) -> handleSaveResponse(status, null, errorMsg, jqxhr)
			
		handleSaveResponse = (status, data, errorMsg, jqxhr) ->
			if status is "success"
				close_dialog()
			else
				alert "Error on save"
		
		do_cancel = (evt) ->
			settings = get_settings()
			form = get_form()
			settings.cancel_callback(form) if typeof settings.cancel_callback is "function"
			close_dialog()

		create_dialog = ->
			settings = get_settings()
			form = settings.div
			form.dialog
				autoOpen: 	settings.autoOpen
				height: 		settings.height
				width: 			settings.width
				modal: 			settings.modal
				resizable: 	settings.resizable
				closeOnEscape: false
				buttons:		settings.btns
				close:			(event, ui) ->
					alert("closing!")

		handleGetForm = (status, data, errorMsg, jqxhr) ->
			settings = get_settings()
			if status is "success"
				# Add the form to the div
				div = settings.div
				div.append(data)
				# Create the dialog
				create_dialog(settings)
				# And open it
				div.dialog "open"
			else
				handleGetFormError()

		handleGetFormError = () ->
			settings = get_settings()
			if settings.error and typeof(settings.error) is "function"
				settings.error()
			else
				alert "Error!"
			# TODO: Handle an error

		handle_btn_click = (evt) ->
			btn = evt.target
			url = btn.href
			# The url will load the form
			$.ajax
				url: 			url
				type: 		'GET'
				dataType: 'html'
				success:	(data, status, jqxhr) -> 
					handleGetForm(status, data, null, jqxhr)
				error:		(jqxhr, status, errorMsg) -> 
					handleGetForm(status, null, errorMsg, jqxhr)
			return false

		setup_btn = (btn) ->
			$(btn).on 'click', handle_btn_click
			
		form_div = $('#editor')
		data = form_div.data "linkToForm"
		unless data
			options = 
				div: form_div
				width: 800
				height: 700
				error: -> alert "Error!"
				cancelCallback: unlock_doc
				CKname: 'text_document_content'
				btns: [
						text: "Save"
						click:  do_save
					,
						text: "Cancel"
						click: do_cancel
					]
			form_div.data "linkToForm", $.extend({}, default_settings, options)
				
		setup_btn btn for btn in $('.edit-button')
